Index: app/src/main/java/utils/app/AppUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/utils/app/AppUtils.java	(revision )
+++ app/src/main/java/utils/app/AppUtils.java	(revision )
@@ -0,0 +1,167 @@
+package utils.app;
+
+import android.app.Activity;
+import android.app.ActivityManager;
+import android.content.Context;
+import android.content.pm.ApplicationInfo;
+import android.content.pm.PackageInfo;
+import android.content.pm.PackageManager;
+import android.graphics.drawable.Drawable;
+import android.os.Process;
+
+import java.util.List;
+
+/**
+ * Created by Administrator on 2017/8/7.当前类创建用于获取app相关信息
+ */
+
+public class AppUtils {
+
+
+    /**
+     * 获取对包名等对应信息
+     **/
+    public static void show(Activity act) {
+        act.getPackageName();
+
+    }
+
+
+    /**
+     * 获取包名，未特别指定情况下，进程名就是包名
+     **/
+    public static String getPackageName(Context context) {
+        return context.getPackageName();
+    }
+
+    /**
+     * 获取当前应用程序的包名
+     *
+     * @param context 上下文对象
+     * @return 返回包名
+     */
+    public static String getAppProcessName(Context context) {
+        //当前应用pid
+        int pid = android.os.Process.myPid();
+        //任务管理类
+        ActivityManager manager = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);
+        //遍历所有应用
+        List<ActivityManager.RunningAppProcessInfo> infos = manager.getRunningAppProcesses();
+        for (ActivityManager.RunningAppProcessInfo info : infos) {
+            if (info.pid == pid)//得到当前应用
+                return info.processName;//返回包名
+        }
+        return null;
+    }
+
+    /**
+     * 获取程序的签名
+     *
+     * @param context
+     * @param packname
+     * @return
+     */
+    public static String getAppSignature(Context context, String packname) {
+        try {
+            //包管理操作管理类
+            PackageManager pm = context.getPackageManager();
+            PackageInfo packinfo = pm.getPackageInfo(packname, PackageManager.GET_SIGNATURES);
+            //获取当前应用签名
+            return packinfo.signatures[0].toCharsString();
+
+        } catch (PackageManager.NameNotFoundException e) {
+            e.printStackTrace();
+
+        }
+        return packname;
+    }
+
+    /**
+     * 获取当前展示 的Activity名称,如果app只有一个activity如游戏，那么第一次安装时获取到的是com.estrongs.android.pop.app.InstallMonitorActivity系统的安装activity
+     *
+     * @return
+     */
+    public static String getCurrentActivityName(Context context) {
+        ActivityManager activityManager = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);
+        String runningActivity = activityManager.getRunningTasks(1).get(0).topActivity.getClassName();
+        return runningActivity;
+    }
+
+    /**
+     * 获取程序的版本号
+     *
+     * @param context
+     * @param packname
+     * @return
+     */
+    public static String getAppVersion(Context context, String packname) {
+        //包管理操作管理类
+        PackageManager pm = context.getPackageManager();
+        try {
+            PackageInfo packinfo = pm.getPackageInfo(packname, 0);
+            return packinfo.versionName;
+        } catch (PackageManager.NameNotFoundException e) {
+            e.printStackTrace();
+
+        }
+        return packname;
+    }
+
+    /**
+     * 获取程序的名字--如：面聊
+     *
+     * @param context
+     * @param packname
+     * @return
+     */
+    public static String getAppName(Context context, String packname) {
+        //包管理操作管理类
+        PackageManager pm = context.getPackageManager();
+        try {
+            ApplicationInfo info = pm.getApplicationInfo(packname, 0);
+            return info.loadLabel(pm).toString();
+        } catch (PackageManager.NameNotFoundException e) {
+            // TODO Auto-generated catch block
+            e.printStackTrace();
+
+        }
+        return packname;
+    }
+
+    /**
+     * 获取程序 图标
+     *
+     * @param context
+     * @param packname 应用包名
+     * @return
+     */
+    public static Drawable getAppIcon(Context context, String packname) {
+        try {
+            //包管理操作管理类
+            PackageManager pm = context.getPackageManager();
+            //获取到应用信息
+            ApplicationInfo info = pm.getApplicationInfo(packname, 0);
+            return info.loadIcon(pm);
+        } catch (PackageManager.NameNotFoundException e) {
+            e.printStackTrace();
+        }
+        return null;
+    }
+
+    /*
+     * 获取程序的权限
+     */
+    public static String[] getAllPermissions(Context context, String packname) {
+        try {
+            //包管理操作管理类
+            PackageManager pm = context.getPackageManager();
+            PackageInfo packinfo = pm.getPackageInfo(packname, PackageManager.GET_PERMISSIONS);
+            //获取到所有的权限
+            return packinfo.requestedPermissions;
+        } catch (PackageManager.NameNotFoundException e) {
+            e.printStackTrace();
+
+        }
+        return null;
+    }
+}
Index: app/src/main/java/utils/app/ManifestUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/utils/app/ManifestUtils.java	(revision )
+++ app/src/main/java/utils/app/ManifestUtils.java	(revision )
@@ -0,0 +1,36 @@
+package utils.app;
+
+import android.content.Context;
+import android.content.pm.ApplicationInfo;
+import android.content.pm.PackageManager;
+import android.os.Bundle;
+
+/**
+ * Created by Administrator on 2017/8/7.当前类主要用于对manifest的操作
+ */
+
+public class ManifestUtils {
+
+    /**notice manifest中的meta-data不能动态修改
+     * **/
+
+    /**
+     * @params key manifest中设置的meta-data的android:name
+     * 读取manifest中节点数据
+     **/
+
+
+    public static String readMetaData(Context context, String key) {
+        ApplicationInfo applicationInfo;
+        Bundle bundle = null;
+        try {
+            applicationInfo = context.getPackageManager().getApplicationInfo(context.getPackageName(), PackageManager.GET_META_DATA);
+            bundle = applicationInfo.metaData;//通过applicationinfo获取到对应的bundle实例
+
+        } catch (PackageManager.NameNotFoundException e) {
+            e.printStackTrace();
+        }
+        return null == bundle ? null : bundle.get(key).toString();//根据在manifest中设置的android:name作为key将获得的值解析出来
+
+    }
+}
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision d90cf8e5892fb2236fa5ac30299f9ac76205f7b3)
+++ .idea/misc.xml	(revision )
@@ -37,7 +37,7 @@
     <ConfirmationsSetting value="0" id="Add" />
     <ConfirmationsSetting value="0" id="Remove" />
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" assert-keyword="true" jdk-15="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" default="true" assert-keyword="true" jdk-15="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
\ No newline at end of file
